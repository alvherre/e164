-- E164 type installation SQL script
-- $Id: e164.sql.in 54 2007-09-10 01:28:30Z glaesema $

SET search_path = public;

BEGIN;

SET LOCAL client_min_messages = notice;

CREATE SCHEMA e164;

SET search_path = e164, public;

CREATE TABLE info (version TEXT PRIMARY KEY,
                   installed_at TIMESTAMP(0) WITH TIME ZONE NOT NULL UNIQUE
                     DEFAULT CURRENT_TIMESTAMP,
                   scm_revision INTEGER NOT NULL UNIQUE);
INSERT INTO info (version, scm_revision)
  VALUES ('0.1', CAST(SUBSTRING('$Revision: 54 $' FROM $re$\d+$re$) AS INTEGER));

CREATE OR REPLACE FUNCTION e164_in(cstring)
RETURNS e164
IMMUTABLE STRICT
LANGUAGE 'C' AS 'MODULE_PATHNAME';

CREATE OR REPLACE FUNCTION e164_out(e164)
RETURNS cstring
IMMUTABLE STRICT
LANGUAGE 'C' AS 'MODULE_PATHNAME';

CREATE OR REPLACE FUNCTION e164_recv(internal)
RETURNS e164
IMMUTABLE STRICT
LANGUAGE 'C' AS 'MODULE_PATHNAME';

CREATE OR REPLACE FUNCTION e164_send(e164)
RETURNS bytea
IMMUTABLE STRICT
LANGUAGE 'C' AS 'MODULE_PATHNAME';

CREATE TYPE e164
(
    LIKE = int8
    , INPUT = e164_in
    , OUTPUT = e164_out
    , RECEIVE = e164_recv
    , SEND = e164_send
);

COMMENT ON TYPE e164 IS
'';

COMMIT;

CREATE OR REPLACE FUNCTION e164_hash(e164)
RETURNS integer
IMMUTABLE STRICT
LANGUAGE 'C' AS 'MODULE_PATHNAME', 'e164_hash';

BEGIN;

SET LOCAL client_min_messages = notice;

CREATE OR REPLACE FUNCTION e164_cmp(e164, e164)
RETURNS INTEGER
IMMUTABLE STRICT
LANGUAGE 'C' AS 'MODULE_PATHNAME';

CREATE OR REPLACE FUNCTION e164_lt(e164, e164)
RETURNS BOOLEAN
IMMUTABLE STRICT
LANGUAGE 'C' AS 'MODULE_PATHNAME';

CREATE OR REPLACE FUNCTION e164_le(e164, e164)
RETURNS BOOLEAN
IMMUTABLE STRICT
LANGUAGE 'C' AS 'MODULE_PATHNAME';

CREATE OR REPLACE FUNCTION e164_ge(e164, e164)
RETURNS BOOLEAN
IMMUTABLE STRICT
LANGUAGE 'C' AS 'MODULE_PATHNAME';

CREATE OR REPLACE FUNCTION e164_gt(e164, e164)
RETURNS BOOLEAN
IMMUTABLE STRICT
LANGUAGE 'C' AS 'MODULE_PATHNAME';

CREATE OR REPLACE FUNCTION e164_eq(e164, e164)
RETURNS BOOLEAN
IMMUTABLE STRICT
LANGUAGE 'C' AS 'MODULE_PATHNAME';

CREATE OR REPLACE FUNCTION e164_ne(e164, e164)
RETURNS BOOLEAN
IMMUTABLE STRICT
LANGUAGE 'C' AS 'MODULE_PATHNAME';

COMMIT;

CREATE OPERATOR <
(
    LEFTARG = e164
    , RIGHTARG = e164
    , PROCEDURE = e164_lt
    , COMMUTATOR = '>'
    , NEGATOR = '>='
    , RESTRICT = scalarltsel
    , JOIN = scalarltjoinsel
);

CREATE OPERATOR <=
(
    LEFTARG = e164
    , RIGHTARG = e164
    , PROCEDURE = e164_le
    , COMMUTATOR = '>='
    , NEGATOR = '>'
    , RESTRICT = scalarltsel
    , JOIN = scalarltjoinsel
);

CREATE OPERATOR >=
(
    LEFTARG = e164
    , RIGHTARG = e164
    , PROCEDURE = e164_ge
    , COMMUTATOR = '<='
    , NEGATOR = '<'
    , RESTRICT = scalargtsel
    , JOIN = scalargtjoinsel
);

CREATE OPERATOR >
(
    LEFTARG = e164
    , RIGHTARG = e164
    , PROCEDURE = e164_le
    , COMMUTATOR = '<'
    , NEGATOR = '<='
    , RESTRICT = scalargtsel
    , JOIN = scalargtjoinsel
);

CREATE OPERATOR =
(
    LEFTARG = e164
    , RIGHTARG = e164
    , PROCEDURE = e164_eq
    , COMMUTATOR = '='
    , NEGATOR = '<>'
    , RESTRICT = eqsel
    , JOIN = eqjoinsel
    , SORT1 = '<'
    , SORT2 = '<'
    , HASHES
);

CREATE OPERATOR <>
(
   LEFTARG = e164
   , RIGHTARG = e164
   , PROCEDURE = e164_ne
   , COMMUTATOR = '<>'
   , NEGATOR = '='
   , RESTRICT = neqsel
   , JOIN = neqjoinsel
);

-- Casts

CREATE FUNCTION text(e164)
RETURNS text
AS 'MODULE_PATHNAME', 'e164_cast_to_text'
LANGUAGE 'C' IMMUTABLE STRICT;

CREATE CAST (e164 AS text) WITH FUNCTION text(e164);

-- Create the operator classes for indexing

CREATE OPERATOR CLASS btree_e164_ops
DEFAULT FOR TYPE e164 USING btree
AS OPERATOR 1 <
    , OPERATOR 2 <=
    , OPERATOR 3 =
    , OPERATOR 4 >=
    , OPERATOR 5 >
    , FUNCTION 1 e164_cmp(e164, e164);

CREATE OPERATOR CLASS hash_e164_ops
DEFAULT FOR TYPE e164 USING hash
AS OPERATOR 1 =
    , FUNCTION 1 e164_hash(e164);

CREATE OR REPLACE FUNCTION country_code(e164)
RETURNS TEXT
IMMUTABLE STRICT
LANGUAGE 'C' AS 'MODULE_PATHNAME';

CREATE OR REPLACE FUNCTION is_consistent(e164)
RETURNS BOOLEAN
IMMUTABLE STRICT
LANGUAGE 'C' AS 'MODULE_PATHNAME';

 -- end
